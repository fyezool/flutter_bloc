matrix:
  include:
  # Job 1) Run analyzer
  - os: linux
    env:
    - SHARD=Analyze
    sudo: false
    addons:
      apt:
        # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
        sources:
        - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
        packages:
        - libstdc++6
        - fonts-droid
    before_script:
    - git clone --single-branch --branch stable https://github.com/flutter/flutter.git $HOME/flutter
    - export PATH=$HOME/flutter/bin:$HOME/flutter/bin/cache/dart-sdk/bin:$PATH
    - flutter doctor
    script:
    - flutter analyze
  # Job 2) Build the example binary for Android (APK)
  - os: linux
    env:
    - SHARD="Build example apks"
    jdk: oraclejdk8
    sudo: false
    addons:
      apt:
        # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
        sources:
        - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
        packages:
        - lib32stdc++6 # https://github.com/flutter/flutter/issues/6207
        - libstdc++6
        - fonts-droid
    before_script:
    - ./scripts/before_build_apks.sh
    - export ANDROID_HOME=$HOME/android-sdk
    - export PATH=$HOME/flutter/bin:$HOME/flutter/bin/cache/dart-sdk/bin:$PATH
    script:
    - cd ./example
    - flutter build apk
  # Job 2) Build the example binary for iOS (IPA)
  - os: osx
    env:
    - SHARD="Build example ipas"
    language: generic
    osx_image: xcode10.1
    before_script:
    - ./scripts/before_build_ipas.sh
    - export PATH=$HOME/flutter/bin:$HOME/flutter/bin/cache/dart-sdk/bin:$PATH
    script:
    - cd ./example
    - flutter build ios --no-codesign
cache:
  directories:
  - $HOME/.pub-cache

notifications:
  slack:
    rooms:
    - secure: U47X3uIQELt1Uc9aHeSpHwEXtdGIOgWnKSCqZiIYnUB8c1Q0DJOpTC3axN1Zw4qX/qU/HSZ0bjpwOs4eDRmJIqAe89DMkpSE5amrlSakBEJj1mkM9mLjBHqj6f3Sn1WJ0YW827cE4b93LFdSJax2UJzyx4uMoJxm/fcU8f+XRvWWQFZjIuVXuD2/OSTSjPJB4vW4UfW6vz30ilyt/42oWrXYpZxxxjLDvNKNa6aGF3R5bTgcGmDtlrF06Hs371YZK6B9uSx9zPMTrd55OfX6JNjv4EQmP3uQi5Ci5wAvTEd7cv7tcYudzFwFWMH20NXmCagFVAJPuP93Vtgxixyx+FZt4ayv5sCcaHueHw4KwGQmwcS6jDiXLtxFNzt4Pw1BxQf0p0WFtkY6QjwyFp+I9eD1PlcEF5XJvJVozxwERBHCbrmBiCoXAFornvX9QG4YHvWy59Fy7CBBY+KG5XpIjPY9bSCpS8EiQB1PmgXqAzFifhzNZT0H7Vi9st50LdtUwXRFV9AjNXaOyGVHpaQRKM5rCW7N1qGoJKb1PRHyOeTkpESQHMdn/uX0UVmrwLZd5SHtSGfwkrBBLeL+iqkb4ET+WRjgizM8zseG3403M4yGXscApxOEuGZQITtODmYpSNoR38pgwT7svPqIuncjOe+/2+O5vDzuUNx0Pr5zqgk=
    on_success: always
    on_failure: always
